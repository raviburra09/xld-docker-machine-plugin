<?xml version='1.0' encoding='UTF-8'?>
<!--

    THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS
    FOR A PARTICULAR PURPOSE. THIS CODE AND INFORMATION ARE NOT SUPPORTED BY XEBIALABS.

-->
<synthetic xsi:schemaLocation="http://www.xebialabs.com/deployit/synthetic synthetic.xsd"
           xmlns="http://www.xebialabs.com/deployit/synthetic" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

    <type type="docker.Machine" extends="udm.BaseProvisioned" container-type="overthere.Host"
          deployable-type="docker.MachineSpec">
        <generate-deployable type="docker.MachineSpec" extends="udm.BaseProvisionable"/>
        <property name="driver" default="virtualbox" description="Driver to create machine with."/>
        <property name="machineName" required="false"/>
        <property name="insecureRegistries" kind="list_of_string" required="false"
                  description="insecure registries to allow with the created engine"/>
        <property name="engineOptions" kind="set_of_string" required="false" category="Engine"
                  description="Arbitrary flags to include with the created engine in the form flag=value"/>
        <property name="engineLabels" kind="set_of_string" required="false" category="Engine"
                  description="Specify labels for the created engine key=value"/>
        <property name="docker_host" label="Docker Host" category="Output" required="false"/>
        <property name="docker_host_address" label="Docker Host Adress" category="Output" required="false"/>
        <property name="docker_cert_path" label="Docker Certificate Path" category="Output" required="false"/>
        <property name="docker_tls_verify" label="Docker TLS Verify" category="Output" required="false"/>
        <property name="docker_certPem" label="Certificate" category="Output" required="false"/>
        <property name="docker_keyPem" label="Key" category="Output" required="false"/>
        <property name="docker_caPem" label="CA" category="Output" required="false"/>
    </type>

    <type-modification type="docker.machine.DockerMachineDictionary">
        <method name="loadDockerMachines" label="Load the Docker Machines " delegate="jythonScript"
                script="docker-machine/load-docker-machines-in-dictionary.py">
        </method>
    </type-modification>

    <type-modification type="docker.Engine">
        <property name="machineName" required="false" category="Docker Machine"/>
        <method name="startMachine" label="Start Machine" description="Start the docker machine"
                delegate="jythonScript" script="docker-machine/start-machine.py"/>
        <method name="stopMachine" label="Stop Machine" description="Stop the docker machine"
                delegate="jythonScript" script="docker-machine/stop-machine.py"/>
        <method name="reloadCertificates" label="Reload Certificates" description="Reload the Certificates."
                delegate="jythonScript" script="docker-machine/reload_cert.py"/>

    </type-modification>


</synthetic>
